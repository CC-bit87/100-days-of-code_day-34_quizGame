import customtkinter
from PIL import Image
from quiz_brain import QuizBrain
import pygame
#Music generated by Mubert https://mubert.com/render

class QuizInterface(customtkinter.CTk):
    def __init__(self, quiz_brain: QuizBrain):
        super().__init__()
        self.quiz = quiz_brain
        point = 0
        pygame.mixer.init()
        pygame.mixer.music.load("images/m_quiz.mp3")
        pygame.mixer.music.play(loops=1, fade_ms=2000)
        pygame.mixer.music.set_volume(0.5,)

        self.geometry("400x550")
        self.title("Show Me What You Got!")
        self._set_appearance_mode("dark")
        # --------------------------------------------------------lable-------------------------------------------------------
        self.score_lable = customtkinter.CTkLabel(self, text="Score",
                                                  bg_color=("#242424", "#EBEBEB"),
                                                  text_color=("#EBEBEB", "#242424"))
        self.score_lable.place(x=300, y=50)

        self.title_lable = customtkinter.CTkLabel(self,
                                                  text= "Show Me What You Got!",
                                                  text_color="#EBEBEB",
                                                  bg_color="#242424",
                                                  font=("Hachi Maru Pop", 22, 'bold'),
                                                  height=10

                                                  )
        self.title_lable.place(x=30, y= 10)
        # -------------------------------------------------------image--------------------------------------------------------

        self.my_image = customtkinter.CTkImage(light_image=Image.open("images/face1.png"),
                                               dark_image=Image.open("images/face1.png"),
                                               size=(350, 350))

        self.image_label = customtkinter.CTkLabel(self,
                                                  image=self.my_image,
                                                  text="",
                                                  text_color="#242424",
                                                  font=("Helvetica", 20, 'bold'),
                                                  height=350,
                                                  width=320,
                                                  )
        self.image_label.place(x=25, y=80)

        # --------------------------------------------------------Buttons----------------------------------------------------
        self.my_image_false = customtkinter.CTkImage(light_image=Image.open("images/x.png"),
                                                     dark_image=Image.open("images/x.png"),
                                                     size=(40, 40))

        self.button_false = customtkinter.CTkButton(self, command=self.button_click_x,
                                                    image=self.my_image_false,
                                                    bg_color="#242424",
                                                    corner_radius=100,
                                                    fg_color="#C2534C",
                                                    text="",
                                                    hover_color="#FF6D64")
        self.button_false.place(x=235, y=450)

        self.my_image_true = customtkinter.CTkImage(light_image=Image.open("images/check.png"),
                                                    dark_image=Image.open("images/check.png"),
                                                    size=(40, 40))

        self.button_true = customtkinter.CTkButton(self, command=self.button_click_check,
                                                   image=self.my_image_true,
                                                   bg_color="#242424",
                                                   corner_radius=100,
                                                   fg_color="#29B677",
                                                   text="",
                                                   hover_color="#39FFA7")
        self.button_true.place(x=25, y=450)

        self.get_next_qustion()

        self.mainloop()

    @staticmethod
    def wrap_text(text, max_length):
        words = text.split()
        lines = []
        line = ""
        for word in words:
            if len(line + word) <= max_length:
                line += word + " "
            else:
                lines.append(line.strip())
                line = word + " "
        lines.append(line.strip())
        return "\n".join(lines)

    def get_next_qustion(self):
        if self.quiz.still_has_questions():
            self.score_lable.configure(text=f"Score: {self.quiz.score}")
            q_text = self.quiz.next_question()
            wrapped_text = self.wrap_text(q_text, max_length=30)  # Adjust max_length as needed
            self.image_label.configure(text=wrapped_text)
        else:
            self.image_label.configure(self,text=f"GAME OVER\n Your score is: {self.quiz.score}")
            self.button_false.configure(state="disabled")
            self.button_true.configure(state="disabled")

    def button_click_check(self):
        self.give_feedback(self.quiz.check_answer(user_answer="true"))

    def button_click_x(self):
        self.give_feedback(self.quiz.check_answer(user_answer="false"))

    def give_feedback(self, is_right):

        if is_right:
            self.image_label.configure(self, text="Right", fg_color="#39FFA7", font=("Helvetica", 40, 'bold'), text_color="white",)

        else:
            self.image_label.configure(self, text="Wrong", fg_color="#FF6D64", font=("Helvetica", 40, 'bold'), text_color="white",)
        self.after(700, self.revert_back)

    def revert_back(self):

        self.image_label.configure(image=self.my_image,
                                   text="",
                                   fg_color=("#EBEBEB"),
                                   text_color="#242424",
                                   font=("Helvetica", 20, 'bold'),
                                   height=350,
                                   width=320,)
        self.get_next_qustion()

